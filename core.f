\ words: load                                                   code load                                                         let block = env.dataStackPopCell();                             if (block == 0) throw 'Block 0 is denied';                      env.setBlock(block);                                            returnFromCode();                                             end-code                                                                                                                        2 load  3 load 4 load 5 load 6 load 7 load 8 load 9 load 10 load 11 load 12 load 13 load 14 load                                                                                                                                                                                                                                                                                                                                                                                                                                \ words: create                                                                                                                 code create                                                       let name = env.readWord();                                      if (name.trim() == '') {                                          throw 'Empty string for name';                                }                                                               env.entry(name);                                                returnFromCode();                                             end-code                                                                                                                                                                                                                                                                                                                                                                                                                                                        \ words: @ !                                                    code @                                                            let addr = env.dataStackPopCell();                              let val = env.readCell(env.memory, addr);                       env.dataStackPushCell(val);                                     returnFromCode();                                             end-code                                                                                                                        code !                                                            let addr = env.dataStackPopCell();                              let val = env.dataStackPopCell();                               env.writeCell(env.memory, addr, val);                           returnFromCode();                                             end-code                                                                                                                                                                                        \ words: c@ c!                                                  code c@                                                           let addr = env.dataStackPopCell();                              let val = env.readByte(env.memory, addr);                       env.dataStackPushCell(val);                                     returnFromCode();                                             end-code                                                                                                                        code c!                                                           let addr = env.dataStackPopCell();                              let val = env.dataStackPopCell();                               env.writeByte(env.memory, addr, val);                           returnFromCode();                                             end-code                                                                                                                                                                                        \ words: . +                                                                                                                    code .                                                            let val = env.dataStackPopCell();                               if (val > 32767) { val = val - 65536; }                         console.log(val);                                               returnFromCode();                                             end-code                                                                                                                        code +                                                            let a = env.dataStackPopCell();                                 let b = env.dataStackPopCell();                                 env.dataStackPushCell(a + b);                                   returnFromCode();                                             end-code                                                                                                                        \ words: - *                                                                                                                    code -                                                            let a = env.dataStackPopCell();                                 let b = env.dataStackPopCell();                                 env.dataStackPushCell(b - a);                                   returnFromCode();                                             end-code                                                                                                                        code *                                                            let a = env.dataStackPopCell();                                 let b = env.dataStackPopCell();                                 env.dataStackPushCell(a * b);                                   returnFromCode();                                             end-code                                                                                                                        \ words: / u.                                                                                                                   code /                                                            let a = env.dataStackPopCell();                                 let b = env.dataStackPopCell();                                 env.dataStackPushCell(Math.floor(b / a));                       returnFromCode();                                             end-code                                                                                                                        code u.                                                           let v = env.dataStackPopCell();                                 console.log(v);                                                 returnFromCode();                                             end-code                                                                                                                                                                                        \ words: >r r>                                                                                                                  code >r                                                           env.returnStackPushCell(env.dataStackPopCell());                returnFromCode();                                             end-code                                                                                                                        code r>                                                           env.dataStackPushCell(env.returnStackPopCell());                returnFromCode();                                             end-code                                                                                                                                                                                                                                                                                                                                                                                        \ words: r@ dup                                                                                                                 code r@                                                           env.dataStackPushCell(env.returnStackPeekCell());               returnFromCode();                                             end-code                                                                                                                        code dup                                                          env.dataStackPushCell(env.dataStackPeekCell());                 returnFromCode();                                             end-code                                                                                                                                                                                                                                                                                                                                                                                        \ words: swap                                                                                                                   code swap                                                         let a = env.dataStackPopCell();                                 let b = env.dataStackPopCell();                                 env.dataStackPushCell(a);                                       env.dataStackPushCell(b);                                       returnFromCode();                                             end-codewords: : exit                                                                                                                 code :                                                            let name = env.readWord();                                      if (name.trim() == '') throw 'Empty string for name';           console.log('new colon definition', name);                      env.memory[0] = 1;                                              env.memory[2] = 1;                                              env.entry(name);                                                returnFromCode();                                             end-code                                                                                                                        code exit                                                         env.returnStackPopCell();                                       returnFromCode();                                             end-code                                                        \ words: immediate ;                                                                                                            code immediate                                                    w = env.vocabularies[0].word;                                   env.memory[w] = 1;                                              returnFromCode();                                             end-code                                                                                                                        code ;                                                            let word = env.code_pointer_addr(env.find_word('exit'));        env.writeNextCell(env.memory, 2);                               env.writeNextCell(env.memory, word);                            env.memory[0] = 0; env.memory[2] = 0;                           returnFromCode();                                             end-code immediate                                                                                                              \ words: , c,                                                                                                                   code ,                                                            let v = env.dataStackPopCell();                                 env.writeNextCell(env.memory, v);                               returnFromCode();                                             end-code                                                                                                                        code c,                                                           let v = env.dataStackPopCell();                                 env.writeNextByte(env.memory, v);                               returnFromCode();                                             end-code                                                                                                                                                                                                                                                        words: here                                                                                                                     code here                                                          env.dataStackPushCell(env.memory.length);                       returnFromCode();                                            end-code